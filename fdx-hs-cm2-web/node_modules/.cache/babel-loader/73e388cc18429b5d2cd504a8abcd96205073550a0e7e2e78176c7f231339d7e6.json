{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass({\n      'red': $data.status === 'Disconnected',\n      'green': $data.status === 'Connected'\n    })\n  }, _toDisplayString($data.status), 3 /* TEXT, CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$data","status"],"sources":["C:\\Users\\Jose\\Documents\\projects\\fdx-hs-newGen-embedded-web\\fdx-hs-newGen-embedded-web\\fdx-hs-cm2-web\\src\\components\\connection.vue"],"sourcesContent":["<template>\r\n<div :class=\"{ 'red': status === 'Disconnected', 'green': status === 'Connected' }\">{{ status }}</div>\r\n</template>\r\n\r\n<script>\r\nimport { useWebSocketStore } from '@/store/websocket.js';\r\nimport { defineComponent, ref, watch } from 'vue';\r\n\r\n\r\nexport default {\r\n  name: 'ConnectionComponent',\r\n  data() {\r\n    return {\r\n      messageReceived: null,\r\n      status: null,\r\n      fileContent: null,\r\n\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.loadConfigFile();\r\n    const websocketStore = useWebSocketStore();\r\n    const messageReceived = ref(null);\r\n    this.timer = setInterval(this.connection, 1000)\r\n    \r\n    this.$watch(() => websocketStore.messageReceived, (newMessage) => {\r\n      this.messageReceived = newMessage;\r\n    });\r\n\r\n  },\r\n  methods: {\r\n    loadConfigFile() {\r\n      const filePath = '/conf.txt'; // Adjust the file path as needed\r\n\r\n      // Fetch the conf.txt file using an HTTP request (e.g., using fetch API)\r\n      fetch(filePath)\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n          this.fileContent = JSON.parse(data);\r\n          // Here you can process the content of the conf.txt file as needed\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error loading the conf.txt file:', error);\r\n        });\r\n    },\r\n    connection() {\r\n      const websocketStore = useWebSocketStore();\r\n      this.status=websocketStore.getStatus();\r\n\r\n     switch (this.status) {\r\n      case \"Disconnected\":\r\n        this.connectWebSocket();\r\n         break;\r\n      case \"Connected\":\r\n         break;\r\n      default:\r\n          this.connectWebSocket();\r\n          break;\r\n\r\n}\r\n   \r\n    },\r\n    connectWebSocket() {\r\n      const url = 'ws://'+this.fileContent.server+':'+this.fileContent.port; // Replace with your WebSocket server URL\r\n      const websocketStore = useWebSocketStore();\r\n      websocketStore.connect(url);\r\n    },\r\n    sendMessage() {\r\n      const message = { key: 'value' }; // Replace with your message data\r\n      const websocketStore = useWebSocketStore();\r\n      websocketStore.send(message);\r\n    },\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.red {\r\n    color: rgb(0, 0, 0); /* Change the text color to red for disconnected */\r\n    padding-right:  50px;\r\n    background-color: rgb(255, 0, 0);\r\n}\r\n\r\n.green {\r\n    color: rgb(0, 0, 0); /* Change the text color to green for connected */\r\n    padding: 50px;\r\n    background-color: rgb(0, 255, 55);\r\n\r\n\r\n}\r\n</style>\r\n"],"mappings":";;uBACAA,mBAAA,CAAsG;IAAhGC,KAAK,EAAAC,eAAA;MAAA,OAAWC,KAAA,CAAAC,MAAM;MAAA,SAA8BD,KAAA,CAAAC,MAAM;IAAA;sBAAuBD,KAAA,CAAAC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}