{"ast":null,"code":"import { defineStore } from 'pinia';\nexport const useWebSocketStore = defineStore({\n  id: 'websocket',\n  state: () => ({\n    socket: null,\n    messageReceived: null,\n    status: 'Disconnected' // New status property to track WebSocket status\n  }),\n\n  actions: {\n    connect(url) {\n      const socket = new WebSocket(url);\n      socket.onopen = () => {\n        console.log('WebSocket connected');\n        this.$state.socket = socket;\n        this.$state.status = \"Connected\";\n      };\n      socket.onclose = () => {\n        console.log('WebSocket disconnected');\n        this.$state.socket = null;\n        this.$state.status = \"Disconnected\";\n      };\n      socket.onerror = error => {\n        console.error('WebSocket error:', error);\n        this.$state.socket = null;\n        this.$state.status = \"error\";\n      };\n\n      // Set up the message event handler to update messageReceived\n      socket.onmessage = event => {\n        console.log(event.data);\n        this.$state.messageReceived = JSON.parse(event.data);\n      };\n    },\n    getStatus() {\n      return this.$state.status;\n    },\n    close() {\n      if (this.$state.socket) {\n        this.$state.socket.close();\n        this.$state.status = \"Disconnected\";\n      }\n    },\n    send(message) {\n      if (this.$state.socket) {\n        this.$state.socket.send(JSON.stringify(message));\n      } else {\n        console.error('WebSocket not connected');\n        this.$state.status = \"Disconnected\";\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useWebSocketStore","id","state","socket","messageReceived","status","actions","connect","url","WebSocket","onopen","console","log","$state","onclose","onerror","error","onmessage","event","data","JSON","parse","getStatus","close","send","message","stringify"],"sources":["C:/Users/Jose/Documents/projects/fdx-hs-newGen-embedded-web/fdx-hs-newGen-embedded-web/fdx-hs-cm2-web/src/store/websocket.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\n\r\nexport const useWebSocketStore = defineStore({\r\n  id: 'websocket',\r\n  state: () => ({\r\n    socket: null,\r\n    messageReceived: null,\r\n    status: 'Disconnected', // New status property to track WebSocket status\r\n\r\n  }),\r\n  actions: {\r\n    connect(url) {\r\n      const socket = new WebSocket(url);\r\n\r\n      socket.onopen = () => {\r\n        console.log('WebSocket connected');\r\n        this.$state.socket = socket;\r\n        this.$state.status = \"Connected\";\r\n\r\n      };\r\n\r\n      socket.onclose = () => {\r\n        console.log('WebSocket disconnected');\r\n        this.$state.socket = null;\r\n        this.$state.status = \"Disconnected\";\r\n      };\r\n\r\n      socket.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        this.$state.socket = null;\r\n        this.$state.status = \"error\";\r\n      };\r\n\r\n      // Set up the message event handler to update messageReceived\r\n      socket.onmessage = (event) => {\r\n        console.log(event.data);\r\n        this.$state.messageReceived = JSON.parse(event.data);\r\n      };\r\n      \r\n    },\r\n    getStatus() {\r\n      return this.$state.status;\r\n    },\r\n    close() {\r\n      if (this.$state.socket) {\r\n        this.$state.socket.close();\r\n        this.$state.status = \"Disconnected\";\r\n      }\r\n    },\r\n\r\n    send(message) {\r\n      if (this.$state.socket) {\r\n        this.$state.socket.send(JSON.stringify(message));\r\n      } else {\r\n        console.error('WebSocket not connected');\r\n        this.$state.status = \"Disconnected\";\r\n      }\r\n    },\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,iBAAiB,GAAGD,WAAW,CAAC;EAC3CE,EAAE,EAAE,WAAW;EACfC,KAAK,EAAEA,CAAA,MAAO;IACZC,MAAM,EAAE,IAAI;IACZC,eAAe,EAAE,IAAI;IACrBC,MAAM,EAAE,cAAc,CAAE;EAE1B,CAAC,CAAC;;EACFC,OAAO,EAAE;IACPC,OAAOA,CAACC,GAAG,EAAE;MACX,MAAML,MAAM,GAAG,IAAIM,SAAS,CAACD,GAAG,CAAC;MAEjCL,MAAM,CAACO,MAAM,GAAG,MAAM;QACpBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClC,IAAI,CAACC,MAAM,CAACV,MAAM,GAAGA,MAAM;QAC3B,IAAI,CAACU,MAAM,CAACR,MAAM,GAAG,WAAW;MAElC,CAAC;MAEDF,MAAM,CAACW,OAAO,GAAG,MAAM;QACrBH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrC,IAAI,CAACC,MAAM,CAACV,MAAM,GAAG,IAAI;QACzB,IAAI,CAACU,MAAM,CAACR,MAAM,GAAG,cAAc;MACrC,CAAC;MAEDF,MAAM,CAACY,OAAO,GAAIC,KAAK,IAAK;QAC1BL,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QACxC,IAAI,CAACH,MAAM,CAACV,MAAM,GAAG,IAAI;QACzB,IAAI,CAACU,MAAM,CAACR,MAAM,GAAG,OAAO;MAC9B,CAAC;;MAED;MACAF,MAAM,CAACc,SAAS,GAAIC,KAAK,IAAK;QAC5BP,OAAO,CAACC,GAAG,CAACM,KAAK,CAACC,IAAI,CAAC;QACvB,IAAI,CAACN,MAAM,CAACT,eAAe,GAAGgB,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACtD,CAAC;IAEH,CAAC;IACDG,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACT,MAAM,CAACR,MAAM;IAC3B,CAAC;IACDkB,KAAKA,CAAA,EAAG;MACN,IAAI,IAAI,CAACV,MAAM,CAACV,MAAM,EAAE;QACtB,IAAI,CAACU,MAAM,CAACV,MAAM,CAACoB,KAAK,CAAC,CAAC;QAC1B,IAAI,CAACV,MAAM,CAACR,MAAM,GAAG,cAAc;MACrC;IACF,CAAC;IAEDmB,IAAIA,CAACC,OAAO,EAAE;MACZ,IAAI,IAAI,CAACZ,MAAM,CAACV,MAAM,EAAE;QACtB,IAAI,CAACU,MAAM,CAACV,MAAM,CAACqB,IAAI,CAACJ,IAAI,CAACM,SAAS,CAACD,OAAO,CAAC,CAAC;MAClD,CAAC,MAAM;QACLd,OAAO,CAACK,KAAK,CAAC,yBAAyB,CAAC;QACxC,IAAI,CAACH,MAAM,CAACR,MAAM,GAAG,cAAc;MACrC;IACF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}