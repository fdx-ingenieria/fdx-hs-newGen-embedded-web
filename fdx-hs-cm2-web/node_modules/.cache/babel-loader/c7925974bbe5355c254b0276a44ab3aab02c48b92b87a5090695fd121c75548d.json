{"ast":null,"code":"import { useWebSocketStore } from '@/store/websocket.js';\nimport { defineComponent, ref, watch } from 'vue';\nexport default {\n  name: 'ConnectionComponent',\n  data() {\n    return {\n      messageReceived: null,\n      status: null,\n      fileContent: null\n    };\n  },\n  created() {\n    this.loadConfigFile();\n    const websocketStore = useWebSocketStore();\n    const messageReceived = ref(null);\n    this.timer = setInterval(this.connection, 1000);\n    this.$watch(() => websocketStore.messageReceived, newMessage => {\n      this.messageReceived = newMessage;\n    });\n  },\n  methods: {\n    loadConfigFile() {\n      const filePath = '/conf.txt'; // Adjust the file path as needed\n\n      // Fetch the conf.txt file using an HTTP request (e.g., using fetch API)\n      fetch(filePath).then(response => response.text()).then(data => {\n        this.fileContent = JSON.parse(data);\n        // Here you can process the content of the conf.txt file as needed\n      }).catch(error => {\n        console.error('Error loading the conf.txt file:', error);\n      });\n    },\n    connection() {\n      const websocketStore = useWebSocketStore();\n      this.status = websocketStore.getStatus();\n      switch (this.status) {\n        case \"Disconnected\":\n          this.connectWebSocket();\n          break;\n        case \"Connected\":\n          break;\n        default:\n          this.connectWebSocket();\n          break;\n      }\n    },\n    connectWebSocket() {\n      const url = 'ws://' + this.fileContent.server + ':' + this.fileContent.port; // Replace with your WebSocket server URL\n      const websocketStore = useWebSocketStore();\n      websocketStore.connect(url);\n    },\n    sendMessage() {\n      const message = {\n        key: 'value'\n      }; // Replace with your message data\n      const websocketStore = useWebSocketStore();\n      websocketStore.send(message);\n    }\n  }\n};","map":{"version":3,"names":["useWebSocketStore","defineComponent","ref","watch","name","data","messageReceived","status","fileContent","created","loadConfigFile","websocketStore","timer","setInterval","connection","$watch","newMessage","methods","filePath","fetch","then","response","text","JSON","parse","catch","error","console","getStatus","connectWebSocket","url","server","port","connect","sendMessage","message","key","send"],"sources":["C:\\Users\\Jose\\Documents\\projects\\fdx-hs-newGen-embedded-web\\fdx-hs-newGen-embedded-web\\fdx-hs-cm2-web\\src\\components\\connection.vue"],"sourcesContent":["<template>\r\n<div :class=\"{ 'red': status === 'Disconnected', 'green': status === 'Connected' }\">{{ status }}</div>\r\n</template>\r\n\r\n<script>\r\nimport { useWebSocketStore } from '@/store/websocket.js';\r\nimport { defineComponent, ref, watch } from 'vue';\r\n\r\n\r\nexport default {\r\n  name: 'ConnectionComponent',\r\n  data() {\r\n    return {\r\n      messageReceived: null,\r\n      status: null,\r\n      fileContent: null,\r\n\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.loadConfigFile();\r\n    const websocketStore = useWebSocketStore();\r\n    const messageReceived = ref(null);\r\n    this.timer = setInterval(this.connection, 1000)\r\n    \r\n    this.$watch(() => websocketStore.messageReceived, (newMessage) => {\r\n      this.messageReceived = newMessage;\r\n    });\r\n\r\n  },\r\n  methods: {\r\n    loadConfigFile() {\r\n      const filePath = '/conf.txt'; // Adjust the file path as needed\r\n\r\n      // Fetch the conf.txt file using an HTTP request (e.g., using fetch API)\r\n      fetch(filePath)\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n          this.fileContent = JSON.parse(data);\r\n          // Here you can process the content of the conf.txt file as needed\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error loading the conf.txt file:', error);\r\n        });\r\n    },\r\n    connection() {\r\n      const websocketStore = useWebSocketStore();\r\n      this.status=websocketStore.getStatus();\r\n\r\n     switch (this.status) {\r\n      case \"Disconnected\":\r\n        this.connectWebSocket();\r\n         break;\r\n      case \"Connected\":\r\n         break;\r\n      default:\r\n          this.connectWebSocket();\r\n          break;\r\n\r\n}\r\n   \r\n    },\r\n    connectWebSocket() {\r\n      const url = 'ws://'+this.fileContent.server+':'+this.fileContent.port; // Replace with your WebSocket server URL\r\n      const websocketStore = useWebSocketStore();\r\n      websocketStore.connect(url);\r\n    },\r\n    sendMessage() {\r\n      const message = { key: 'value' }; // Replace with your message data\r\n      const websocketStore = useWebSocketStore();\r\n      websocketStore.send(message);\r\n    },\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.red {\r\n    color: rgb(0, 0, 0); /* Change the text color to red for disconnected */\r\n    padding-right:  50px;\r\n    padding-left:  50px;\r\n    margin-right: 100px;\r\n    padding-top: 10px;\r\n    padding-bottom: 20px;\r\n    background-color: rgb(255, 0, 0);\r\n}\r\n\r\n.green {\r\n    color: rgb(0, 0, 0); /* Change the text color to green for connected */\r\n    padding-right: 50px;\r\n    padding-left: 50px;\r\n    background-color: rgb(0, 255, 55);\r\n\r\n\r\n}\r\n</style>\r\n"],"mappings":"AAKA,SAASA,iBAAgB,QAAS,sBAAsB;AACxD,SAASC,eAAe,EAAEC,GAAG,EAAEC,KAAI,QAAS,KAAK;AAGjD,eAAe;EACbC,IAAI,EAAE,qBAAqB;EAC3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI;MACrBC,MAAM,EAAE,IAAI;MACZC,WAAW,EAAE;IAEf,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,MAAMC,cAAa,GAAIX,iBAAiB,CAAC,CAAC;IAC1C,MAAMM,eAAc,GAAIJ,GAAG,CAAC,IAAI,CAAC;IACjC,IAAI,CAACU,KAAI,GAAIC,WAAW,CAAC,IAAI,CAACC,UAAU,EAAE,IAAI;IAE9C,IAAI,CAACC,MAAM,CAAC,MAAMJ,cAAc,CAACL,eAAe,EAAGU,UAAU,IAAK;MAChE,IAAI,CAACV,eAAc,GAAIU,UAAU;IACnC,CAAC,CAAC;EAEJ,CAAC;EACDC,OAAO,EAAE;IACPP,cAAcA,CAAA,EAAG;MACf,MAAMQ,QAAO,GAAI,WAAW,EAAE;;MAE9B;MACAC,KAAK,CAACD,QAAQ,EACXE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCF,IAAI,CAAEf,IAAI,IAAK;QACd,IAAI,CAACG,WAAU,GAAIe,IAAI,CAACC,KAAK,CAACnB,IAAI,CAAC;QACnC;MACF,CAAC,EACAoB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,CAAC,CAAC;IACN,CAAC;IACDZ,UAAUA,CAAA,EAAG;MACX,MAAMH,cAAa,GAAIX,iBAAiB,CAAC,CAAC;MAC1C,IAAI,CAACO,MAAM,GAACI,cAAc,CAACiB,SAAS,CAAC,CAAC;MAEvC,QAAQ,IAAI,CAACrB,MAAM;QAClB,KAAK,cAAc;UACjB,IAAI,CAACsB,gBAAgB,CAAC,CAAC;UACtB;QACH,KAAK,WAAW;UACb;QACH;UACI,IAAI,CAACA,gBAAgB,CAAC,CAAC;UACvB;MAEV;IAEI,CAAC;IACDA,gBAAgBA,CAAA,EAAG;MACjB,MAAMC,GAAE,GAAI,OAAO,GAAC,IAAI,CAACtB,WAAW,CAACuB,MAAM,GAAC,GAAG,GAAC,IAAI,CAACvB,WAAW,CAACwB,IAAI,EAAE;MACvE,MAAMrB,cAAa,GAAIX,iBAAiB,CAAC,CAAC;MAC1CW,cAAc,CAACsB,OAAO,CAACH,GAAG,CAAC;IAC7B,CAAC;IACDI,WAAWA,CAAA,EAAG;MACZ,MAAMC,OAAM,GAAI;QAAEC,GAAG,EAAE;MAAQ,CAAC,EAAE;MAClC,MAAMzB,cAAa,GAAIX,iBAAiB,CAAC,CAAC;MAC1CW,cAAc,CAAC0B,IAAI,CAACF,OAAO,CAAC;IAC9B;EACF;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}